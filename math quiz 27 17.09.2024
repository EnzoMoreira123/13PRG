from tkinter import *
from tkinter import Tk
import random
from tkinter import messagebox
import os

PERCENTAGE = 0

N_ACHIEVED= "Don't be discouraged! While you didn't pass this time, remember that every attempt is a step closer to success. Review the material and try again—you've got this!"

ACHIEVED="Well done! You've successfully passed the quiz. Your hard work is paying off, and with continued effort, you'll keep improving. Keep up the great work!"

MERIT= "Great job! You scored a Merit on the quiz, showing a strong understanding of the material. Your dedication is evident, and you're just a step away from excellence. Keep pushing forward!"

EXCELLENCE= "Congratulations! You've achieved Excellence on the quiz, demonstrating exceptional knowledge and understanding. Your effort and commitment have truly paid off. Keep up the outstanding work!"

# Array of questions and answers combined
qa_combined = [
    ("Simplify 4x + 2x - x", "5x", "6x", "3x", "4x + 2"),
    ("Simplify 4c * 2d", "8cd", "6cd", "8c^2d", "4c^2d"),
    ("Does 30a^3 / 6a simplify to 2a / 4^8?", "No", "Yes", ),
    ("Simplify (3b^2)^3", "27b^6", "9b^6", "81b^5", "27b^8"),
    ("Simplify 3a^3b * 5bc * 2ac^2","30a^5b^2c^3", "30a^4b^2c^3", "15a^4b^2c^3", "30a^5bc^3"),
    ("Expand 2(x + 4) + 5(x + 3)", "7x + 23", "7x + 22","7x + 19", "7x + 20"),
    ("Expand 3(x + 5) + 2(x + 1)", "5x + 17", "5x + 16", "6x + 17", "5x + 18"),
    ("If two sets of brackets added results in 7x - 5, what could they be?", "5(x - 3) + 2(x + 5)", "3(x - 2) + 4(x + 1)", "2(x - 4) + 5(x + 2)", "4(x - 1) + 3(x + 2)"),
    ("Expand 3(2x - 7) - 2(x - 2)", "4x - 17", "6x - 23", "4x - 19", "5x - 23"),
    ("Expand 3(2x + 5) + 2(x - 3)", "8x + 9", "8x + 7", "10x + 9", "6x + 9"),
    ("Expand 4(x - 3)", "4x - 12", "4x - 9", "4x - 15", "4x - 6"),
    ("Expand x(x + 4)", "x^2 + 4x", "x^2 + 3x", "x^2 + 5x", "x^2 + 6x"),
    ("Does 2x(x + 9) simplify to 2x^2 + 18x?", "Yes", "No"),
    ("Expand x^2(3x + y)", "3x^3 + x^2y", "3x^3 + 2x^2y", "3x^3 + 3xy", "3x^3 + xy^2"),
    ("Expand 2y^2(y - x)", "2y^3 - 2xy^2", "2y^3 - yx^2", "2y^3 - 2y^2x", "2y^3 - y^2x"),
    ("Factor x^2 + 7x + 10", "(x + 2)(x + 5)", "(x + 1)(x + 10)", "(x + 6)(x + 2)", "(x + 3)(x + 4)"),
    ("Factor x^2 + 7x + 12", "(x + 3)(x + 4)", "(x + 1)(x + 12)", "(x + 2)(x + 6)", "(x + 4)(x + 3)"),
    ("Factor x^2 + 13x + 12", "(x + 12)(x + 1)", "(x + 4)(x + 9)", "(x + 3)(x + 4)", "(x + 6)(x + 7)"),
    ("Factor x^2 + 22x + 21", "(x + 21)(x + 1)", "(x + 20)(x + 1)", "(x + 11)(x + 11)", "(x + 22)(x + 1)"),
    ("Factor x^2 + 10x + 16", "(x + 8)(x + 2)", "(x + 5)(x + 3)", "(x + 4)(x + 4)", "(x + 6)(x + 4)")
]

selected_answers=[]
correct_response=[]


correct_answers_count = [0]
total_answers_count = [0]

random.shuffle(qa_combined)
for i in qa_combined:
    correct_response.append(i[1])

# Separate the first and second items of each tuple
questions = [item[0] for item in qa_combined]
correct_answers = [item[1:] for item in qa_combined]

# Combine them back into a list of tuples
qa_separated = list(zip(questions, correct_answers))

def RESULT_W(score):
    PERCENTAGE=score*10
    resultswindow = Tk()
    resultswindow.resizable(False, False)
    resultswindow.title("Year 10 Math Quiz")
    resultswindow.geometry("700x450")
    resultswindow.configure(bg="#d0e0e3")
    resultswindow.geometry("%dx%d+%d+%d" % (700,450, 557,227.5))

    def EXIT():        
        shuffled_questions = questions[:10]
        shuffled_correct_answers = [qa_combined[i][1] for i in range(10)]

                           
        os.startfile("quiz_results.txt")
        
        resultswindow.destroy()    

    # "Exit" button 
        
    results_text = Label(resultswindow, width=20, borderwidth=1, highlightbackground="black", relief="solid",
    anchor="center", text="RESULTS", font="Verdana 19", bg="#9fc5e8").place(x=187, y=50) 

    exit_button = Button(resultswindow, text="Exit", font="Verdana 18", bg="#9fc5e8", command=EXIT).place(x=634,y=0)
    tryagain_button = Button(resultswindow, width=50, height=1, borderwidth=0.5,command= lambda:TRY_AGAIN(resultswindow), text="TRY AGAIN", font="Verdana 19", anchor="center",
    bg="#9fc5e8",).place(x=-40, y=400)
    
    if PERCENTAGE<29:
        MESSAGE=N_ACHIEVED
    elif PERCENTAGE>=30 and PERCENTAGE<49:
        MESSAGE = ACHIEVED
    elif PERCENTAGE>=50 and PERCENTAGE<79:
        MESSAGE = MERIT
    else:
        MESSAGE=EXCELLENCE

    r_canvas = Canvas(resultswindow, highlightbackground="black", height=225, width=700)
    r_canvas.place( y=125)
    r_text = Label(r_canvas, text = f"PERCENTAGE: {PERCENTAGE}%\nMESSAGE: {MESSAGE}", font="Verdana 18", wraplength=500)
    r_text.place(relx=0.5, rely=0.5, anchor=CENTER)

def Q_REPEAT(introwindow,score):
    introwindow.destroy() 
    QUIZ_QUESTION(score)

# Global variables to keep track of the current question index and the number of questions answered
current_question_index = [0]
questions_answered = [0]  # Use a list to make it mutable

def QUIZ_QUESTION(score):
    skips_left = [3]
    def display_question(index,score):
        questionwindow = Tk()
        questionwindow.resizable(False, False)
        questionwindow.title("Year 10 Math Quiz")
        questionwindow.geometry("700x450")
        questionwindow.configure(bg="#d0e0e3")
        questionwindow.geometry("%dx%d+%d+%d" % (700,450, 557,227.5))
        
        q_heading_canvas = Label(questionwindow, width=80, height=1, text="QUESTION", font="Verdana 18 ", bg="#cccccc")
        q_heading_canvas.place(x=-245, y=-3)
        q_intro_text = Label(questionwindow, width=20, borderwidth=1, highlightbackground="black", relief="solid",
                             anchor="center", text=" QUESTION NUMBER:"+str(questions_answered[0]+1), font="Verdana 19", bg="#9fc5e8")
        q_intro_text.place(x=187, y=50)
        
        # Create Canvas and place it
        q_canvas = Canvas(questionwindow, highlightbackground="black", height=200, width=300)
        q_canvas.place(x=60, y=125)

        # Create Label inside Canvas with the question
        question_text = questions[index]
        q_text = Label(q_canvas, text=question_text, font="Verdana 18", wraplength=280)
        q_text.place(relx=0.5, rely=0.5, anchor=CENTER)

        selected_answers=[]
        global selected_answer_var
        selected_answer_var = StringVar(value=".")

        def next_question(selected_answer,score,text):
            with open("quiz_results.txt", "a") as file:
                file.write(f"Question {questions_answered[0] + 1}: {questions[questions_answered[0]]}\n")
                file.write(f"Correct Answer {questions_answered[0] + 1}:  {correct_response[questions_answered[0]]}\n")
                if selected_answer == ".":  # Assuming that the default value of selected_answer_var is "." for skipped questions
                    file.write(f"Selected Answer {questions_answered[0] + 1}: Skipped\n\n")
                else:
                    file.write(f"Selected Answer {questions_answered[0] + 1}: {selected_answer}\n\n")


            selected_answers.append(selected_answer)
            if selected_answer in correct_response:
                score+=1
            questionwindow.destroy()

            if questions_answered[0] < 9:
                questions_answered[0] += 1
                current_question_index[0] += 1
                if current_question_index[0] < len(questions):
                    display_question(current_question_index[0],score)
                else:
                    RESULT_W(score)
            else:
                RESULT_W(score)
        
        
        if len(correct_answers[index]) == 2:
            answers = [correct_answers[index][0], correct_answers[index][1]]
        else:
            answers = [correct_answers[index][0], correct_answers[index][1], 
                       correct_answers[index][2], correct_answers[index][3]]# Replace with actual answer choices
        random.shuffle(answers)
        value=""
        
        for i, text in enumerate(answers):   
            print(selected_answer_var)
            
            Radiobutton(
            questionwindow,
            borderwidth=0.5,
            value=text,
            variable=selected_answer_var,
            text=text,
            font="Verdana 15",
            wraplength=280,
            bg="#d0e0e3",
            command=lambda text=text: next_question(text, score, text)  # Capture the current instance of StringVar
        ).place(x=410, y=130 + i * 50)
 

        def skip_action(score):
            if skips_left[0] > 0:
                skips_left[0] -= 1
                selected_answer = "."
                next_question(selected_answer, score, selected_answer)
                questionwindow.destroy()
                if questions_answered[0] < 9:
                    questions_answered[0] += 1
                    current_question_index[0] += 1
                    if current_question_index[0] < len(questions):
                        display_question(current_question_index[0], score)
                    else:
                        RESULT_W(score)
                else:
                    RESULT_W(score)
            if skips_left[0] == 0:
                 messagebox.showerror('Skips', 'You have no remanining skips!')  # Hide the skip button after 3 skips          
        skip_button = Button(questionwindow, width=50, height=1, borderwidth=0.5,text="SKIP", font="Verdana 19", anchor="center",
                              bg="#9fc5e8", command=lambda:skip_action(score)).place(x=-40, y=400)
 
    display_question(current_question_index[0],score)
   
def MAIN_W():
    score=0
    introwindow = Tk()
    introwindow.resizable(False, False)
    introwindow.title("Year 10 Math Quiz")
    introwindow.geometry("850x450")
    introwindow.configure(bg="#d0e0e3")
    introwindow.geometry("%dx%d+%d+%d" % (850,450, 457,227.5))
    
    heading_canvas = Label(introwindow, width=80, height=1, text="INTRODUCTION", font="Verdana 16 ", bg= "#cccccc"  ).place(x=-95, y=-3)

    intro_text = Label(introwindow, width=40,borderwidth=1, highlightbackground= "black",relief="solid", anchor="center", text= "THIS QUIZ WILL TEST YOUR KNOWLEDGE \n ON YEAR 10 MATH \n \n"
                       "THERE WILL BE A TOTAL OF 10 QUESTIONS.\n SELECT THE ANSWER CORRECT ANSWER OR SKIP \n 3 QUESTIONS \n \n"
                       "PLEASE PRESS “BEGIN” ONCE YOU ARE READY"
,font="Verdana 19", bg= "#9fc5e8"  ).place(x=110, y=80)
    
    begin_button = Button(introwindow, width=15, height=1,borderwidth=0.5, text="BEGIN", font="Verdana 19", anchor="center",
                          bg="#9fc5e8",  command=lambda: Q_REPEAT(introwindow,score) ).place(x=300, y=370)
    


    introwindow.mainloop()

PROGRAM =1
def TRY_AGAIN(resultswindow):
    global PROGRAM
    PROGRAM= 1
    resultswindow.destroy()
while PROGRAM == 1:
    PROGRAM = 0
    score=0
    skips_left=3
    questions_answered[0] = 0
    current_question_index[0] = 0
    random.shuffle(qa_combined)
    with open("quiz_results.txt", "w") as file:
        file.write("Questions and Answers:\n\n")
    MAIN_W()
